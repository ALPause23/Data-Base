-- MySQL Script generated by MySQL Workbench
-- Thu Oct 31 02:24:20 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema fabrica_2
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema fabrica_2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `fabrica_2` DEFAULT CHARACTER SET utf8 ;
USE `fabrica_2` ;

-- -----------------------------------------------------
-- Table `fabrica_2`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`room` (
  `id_room` INT NOT NULL AUTO_INCREMENT UNIQUE,
  `temperature` INT NULL,
  `type` VARCHAR(20) NULL,
  PRIMARY KEY (`id_room`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`store`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`store` (
  `id_store` INT NOT NULL AUTO_INCREMENT,
  `responsible` VARCHAR(45) NOT NULL,
  `number` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `storecol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_store`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`worker`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`worker` (
  `id_passport` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `education` VARCHAR(45) NOT NULL,
  `id_store` INT NOT NULL,
  `id_room` INT NOT NULL,
  PRIMARY KEY (`id_passport`),
  INDEX `room_idx` (`id_room` ASC) VISIBLE,
  INDEX `FK_worker_store_idx` (`id_store` ASC) VISIBLE,
  CONSTRAINT `FK_worker_room`
    FOREIGN KEY (`id_room`)
    REFERENCES `fabrica_2`.`room` (`id_room`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_worker_store`
    FOREIGN KEY (`id_store`)
    REFERENCES `fabrica_2`.`store` (`id_store`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`workshop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`workshop` (
  `id_workshop` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(45) NOT NULL,
  `number_worker` INT NOT NULL,
  PRIMARY KEY (`id_workshop`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`status` (
  `id_workshop` INT NOT NULL AUTO_INCREMENT,
  `id_passport` INT NOT NULL,
  `position` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_workshop`, `id_passport`),
  INDEX `passport_idx` (`id_passport` ASC) VISIBLE,
  CONSTRAINT `FK_status_workshop`
    FOREIGN KEY (`id_workshop`)
    REFERENCES `fabrica_2`.`workshop` (`id_workshop`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_status_worker`
    FOREIGN KEY (`id_passport`)
    REFERENCES `fabrica_2`.`worker` (`id_passport`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`territory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`territory` (
  `id_workshop_territoty` INT NOT NULL AUTO_INCREMENT,
  `id_room_territory` INT NOT NULL,
  PRIMARY KEY (`id_workshop_territoty`, `id_room_territory`),
  INDEX `room_idx` (`id_room_territory` ASC) VISIBLE,
  CONSTRAINT `FK_territory_workshop`
    FOREIGN KEY (`id_workshop_territoty`)
    REFERENCES `fabrica_2`.`workshop` (`id_workshop`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_territory_room`
    FOREIGN KEY (`id_room_territory`)
    REFERENCES `fabrica_2`.`room` (`id_room`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`product` (
  `id_product` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `build_time` TIME NULL,
  PRIMARY KEY (`id_product`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`shift`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`shift` (
  `id_shift` INT NOT NULL AUTO_INCREMENT,
  `start_time` TIME NOT NULL,
  `finish_time` TIME NOT NULL,
  PRIMARY KEY (`id_shift`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`manufacture`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`manufacture` (
  `id_workshop` INT NOT NULL,
  `id_product` INT NOT NULL,
  `id_shift` INT NOT NULL,
  `id_otk` INT NOT NULL,
  `result` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_workshop`, `id_product`, `id_shift`),
  INDEX `FK_manufacture_shift_idx` (`id_shift` ASC) VISIBLE,
  INDEX `FK_manufacture_product_idx` (`id_product` ASC) VISIBLE,
  CONSTRAINT `FK_manufacture_workshop`
    FOREIGN KEY (`id_workshop`)
    REFERENCES `fabrica_2`.`workshop` (`id_workshop`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_manufacture_shift`
    FOREIGN KEY (`id_shift`)
    REFERENCES `fabrica_2`.`shift` (`id_shift`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_manufacture_product`
    FOREIGN KEY (`id_product`)
    REFERENCES `fabrica_2`.`product` (`id_product`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`store_material`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`store_material` (
  `id_store` INT NOT NULL AUTO_INCREMENT,
  `id_workshop` INT NOT NULL,
  PRIMARY KEY (`id_store`),
  INDEX `FK_material_workshop_idx` (`id_workshop` ASC) VISIBLE,
  CONSTRAINT `FK_material_store`
    FOREIGN KEY (`id_store`)
    REFERENCES `fabrica_2`.`store` (`id_store`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_material_workshop`
    FOREIGN KEY (`id_workshop`)
    REFERENCES `fabrica_2`.`workshop` (`id_workshop`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `fabrica_2`.`task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `fabrica_2`.`task` (
  `id_shift` INT NOT NULL AUTO_INCREMENT,
  `id_passport` INT NOT NULL,
  `date` TIME NOT NULL,
  `type_work` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_shift`, `id_passport`),
  INDEX `FK_task_worker_idx` (`id_passport` ASC) VISIBLE,
  CONSTRAINT `FK_task_shift`
    FOREIGN KEY (`id_shift`)
    REFERENCES `fabrica_2`.`shift` (`id_shift`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_task_worker`
    FOREIGN KEY (`id_passport`)
    REFERENCES `fabrica_2`.`worker` (`id_passport`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO room (temperature, type) VALUES (20, 'type0'),
													 (25, 'type1'),
													 (-5, 'type0'),
													 (25, 'type3');
INSERT INTO worker (id_passport, name, education, id_room, id_store) VALUES (123, 'Ivan Danko', 'BSUIR', 4,1),
																(234, 'Kirill Petrov', 'BSUIR', 1, 1),
                                                                (157, 'Vova Kupreev', 'BGU', 1, 2),
                                                                (78, 'Evgeni Harkavik', 'BNTU', 3, 2);                                                           ;
INSERT INTO worker (id_passport, name, education, id_room, id_store) VALUES (15, 'Kabrinovich Evgeni', 'MRK', 2, 2),
																		   (100, 'Pavel Mosechuk', 'BATU', 3, 4);
SELECT * FROM worker, room WHERE worker.id_room=room.id_room;
select * from  worker inner join room on worker.id_room=1;
       
                                                                
